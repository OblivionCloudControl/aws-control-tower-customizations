stages:
  - prepare
  - test
  - build
  - publish
  - deploy

image: $CI_REGISTRY_IMAGE/gitlab-ci:$CI_COMMIT_BRANCH
variables:
  PIPENV_CACHE_DIR: $CI_PROJECT_DIR/.cache
  SOLUTION_NAME: Ripe-Control-Tower-custom
  VERSION: $CI_COMMIT_SHORT_SHA
  TEMPLATE_BUCKET_NAME: custom-control-tower-templates
  DIST_BUCKET_NAME: custom-control-tower-dist
  CODE_BUCKET_NAME: custom-control-tower-code
cache:
  key:
    files:
      - Pipfile.lock
  paths:
    - .cache

control-tower-customizations/gitlab-ci:
  stage: prepare
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/gitlab-ci:$CI_COMMIT_BRANCH -f .gitlab/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/gitlab-ci:$CI_COMMIT_BRANCH
  only:
    changes:
      - .gitlab/Dockerfile
      -  Pipfile.lock


lint:
  stage: test
  script:
    - ./deployment/substitute-vars.sh
    - cfn-lint

build:
  stage: build
  script:
    - ./deployment/substitute-vars.sh
    - ./deployment/build-s3-dist.sh $DIST_BUCKET_NAME $TEMPLATE_BUCKET_NAME $SOLUTION_NAME $VERSION
  artifacts:
    paths:
      - deployment/global-s3-assets
      - deployment/regional-s3-assets

platform:
  stage: publish
  script:
    - ./deployment/substitute-vars.sh
    - aws cloudformation deploy --no-fail-on-empty-changeset --stack-name custom-control-tower-buckets --template-file deployment/custom-control-tower-buckets.cfn.yml
    - aws s3 cp deployment/global-s3-assets s3://$CODE_BUCKET_NAME/$SOLUTION_NAME/$VERSION/ --recursive
    - aws s3 cp deployment/regional-s3-assets s3://$CODE_BUCKET_NAME/$SOLUTION_NAME/$VERSION/ --recursive
  only:
    - master

deploy:
  stage: deploy
  script:
    - aws cloudformation deploy s3://$TEMPLATE_BUCKET_NAME/custom-control-tower-initiation.template # TODO finish command
  only:
    - master
